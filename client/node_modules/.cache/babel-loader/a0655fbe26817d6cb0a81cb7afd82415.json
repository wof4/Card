{"ast":null,"code":"import { a as _inherits, b as _createSuper, c as _createClass, d as _classCallCheck, e as _assertThisInitialized } from './_rollupPluginBabelHelpers-9b6cc24f.js';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IMask from 'imask/esm/imask';\nvar MASK_PROPS = {\n  // common\n  mask: PropTypes.oneOfType([PropTypes.array, PropTypes.func, PropTypes.string, PropTypes.instanceOf(RegExp), PropTypes.oneOf([Date, Number, IMask.Masked]), PropTypes.instanceOf(IMask.Masked)]),\n  value: PropTypes.any,\n  unmask: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['typed'])]),\n  prepare: PropTypes.func,\n  validate: PropTypes.func,\n  commit: PropTypes.func,\n  overwrite: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['shift'])]),\n  eager: PropTypes.bool,\n  // events\n  onAccept: PropTypes.func,\n  onComplete: PropTypes.func,\n  // pattern\n  placeholderChar: PropTypes.string,\n  lazy: PropTypes.bool,\n  definitions: PropTypes.object,\n  blocks: PropTypes.object,\n  // date\n  pattern: PropTypes.string,\n  format: PropTypes.func,\n  parse: PropTypes.func,\n  autofix: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['pad'])]),\n  // number\n  radix: PropTypes.string,\n  thousandsSeparator: PropTypes.string,\n  mapToRadix: PropTypes.arrayOf(PropTypes.string),\n  scale: PropTypes.number,\n  signed: PropTypes.bool,\n  normalizeZeros: PropTypes.bool,\n  padFractionalZeros: PropTypes.bool,\n  min: PropTypes.oneOfType([PropTypes.number, PropTypes.instanceOf(Date)]),\n  max: PropTypes.oneOfType([PropTypes.number, PropTypes.instanceOf(Date)]),\n  // dynamic\n  dispatch: PropTypes.func,\n  // ref\n  inputRef: PropTypes.func\n};\nvar MASK_PROPS_NAMES = Object.keys(MASK_PROPS);\nvar NON_MASK_OPTIONS_PROPS_NAMES = ['value', 'unmask', 'onAccept', 'onComplete', 'inputRef'];\nvar MASK_OPTIONS_PROPS_NAMES = MASK_PROPS_NAMES.filter(function (pName) {\n  return NON_MASK_OPTIONS_PROPS_NAMES.indexOf(pName) < 0;\n});\n\nfunction IMaskMixin(ComposedComponent) {\n  var MaskedComponent = /*#__PURE__*/function (_React$Component) {\n    _inherits(MaskedComponent, _React$Component);\n\n    var _super = _createSuper(MaskedComponent);\n\n    function MaskedComponent(props) {\n      var _this;\n\n      _classCallCheck(this, MaskedComponent);\n\n      _this = _super.call(this, props);\n      _this._inputRef = _this._inputRef.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(MaskedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (!this.props.mask) return;\n        this.initMask();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var props = this.props;\n\n        var maskOptions = this._extractMaskOptionsFromProps(props);\n\n        if (maskOptions.mask) {\n          if (this.maskRef) {\n            this.maskRef.updateOptions(maskOptions); // TODO\n\n            if ('value' in props && (props.value !== this.maskValue || // handle cases like Number('') === 0,\n            // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n            typeof props.value !== 'string' && this.maskRef.value === '' && !this.maskRef.el.isActive)) {\n              this.maskValue = props.value;\n            }\n          } else {\n            this.initMask(maskOptions); // TODO\n          }\n        } else {\n          this.destroyMask();\n          if ('value' in props) this.element.value = props.value;\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.destroyMask();\n      }\n    }, {\n      key: \"_inputRef\",\n      value: function _inputRef(el) {\n        this.element = el;\n        if (this.props.inputRef) this.props.inputRef(el);\n      }\n    }, {\n      key: \"initMask\",\n      value: function initMask() {\n        var maskOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._extractMaskOptionsFromProps(this.props);\n        this.maskRef = IMask(this.element, maskOptions).on('accept', this._onAccept.bind(this)).on('complete', this._onComplete.bind(this));\n        if ('value' in this.props) this.maskValue = this.props.value;\n      }\n    }, {\n      key: \"destroyMask\",\n      value: function destroyMask() {\n        if (this.maskRef) {\n          this.maskRef.destroy();\n          delete this.maskRef;\n        }\n      }\n    }, {\n      key: \"_extractMaskOptionsFromProps\",\n      value: function _extractMaskOptionsFromProps(props) {\n        var cloneProps = Object.assign({}, props); // keep only mask options props\n\n        Object.keys(cloneProps) // TODO why need cast to string?\n        .filter(function (prop) {\n          return MASK_OPTIONS_PROPS_NAMES.indexOf(prop) < 0;\n        }).forEach(function (nonMaskProp) {\n          delete cloneProps[nonMaskProp];\n        });\n        return cloneProps;\n      }\n    }, {\n      key: \"_extractNonMaskProps\",\n      value: function _extractNonMaskProps(props) {\n        var cloneProps = Object.assign({}, props);\n        MASK_PROPS_NAMES.forEach(function (maskProp) {\n          delete cloneProps[maskProp];\n        });\n        return cloneProps;\n      }\n    }, {\n      key: \"maskValue\",\n      get: function get() {\n        if (this.props.unmask === 'typed') return this.maskRef.typedValue;\n        if (this.props.unmask) return this.maskRef.unmaskedValue;\n        return this.maskRef.value;\n      },\n      set: function set(value) {\n        value = value == null ? '' : value;\n        if (this.props.unmask === 'typed') this.maskRef.typedValue = value;else if (this.props.unmask) this.maskRef.unmaskedValue = value;else this.maskRef.value = value;\n      }\n    }, {\n      key: \"_onAccept\",\n      value: function _onAccept(e) {\n        if (this.props.onAccept && this.maskRef) this.props.onAccept(this.maskValue, this.maskRef, e);\n      }\n    }, {\n      key: \"_onComplete\",\n      value: function _onComplete(e) {\n        if (this.props.onComplete && this.maskRef) this.props.onComplete(this.maskValue, this.maskRef, e);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(ComposedComponent, Object.assign({}, this._extractNonMaskProps(this.props), {\n          inputRef: this._inputRef\n        }));\n      }\n    }]);\n\n    return MaskedComponent;\n  }(React.Component);\n\n  var nestedComponentName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n  MaskedComponent.displayName = \"IMask(\".concat(nestedComponentName, \")\");\n  MaskedComponent.propTypes = MASK_PROPS;\n  return MaskedComponent;\n}\n\nexport { IMaskMixin as default };","map":{"version":3,"sources":["C:/Users/yulya/Desktop/Новая папка/card/client/node_modules/react-imask/esm/mixin.js"],"names":["a","_inherits","b","_createSuper","c","_createClass","d","_classCallCheck","e","_assertThisInitialized","React","PropTypes","IMask","MASK_PROPS","mask","oneOfType","array","func","string","instanceOf","RegExp","oneOf","Date","Number","Masked","value","any","unmask","bool","prepare","validate","commit","overwrite","eager","onAccept","onComplete","placeholderChar","lazy","definitions","object","blocks","pattern","format","parse","autofix","radix","thousandsSeparator","mapToRadix","arrayOf","scale","number","signed","normalizeZeros","padFractionalZeros","min","max","dispatch","inputRef","MASK_PROPS_NAMES","Object","keys","NON_MASK_OPTIONS_PROPS_NAMES","MASK_OPTIONS_PROPS_NAMES","filter","pName","indexOf","IMaskMixin","ComposedComponent","MaskedComponent","_React$Component","_super","props","_this","call","_inputRef","bind","key","componentDidMount","initMask","componentDidUpdate","maskOptions","_extractMaskOptionsFromProps","maskRef","updateOptions","maskValue","el","isActive","destroyMask","element","componentWillUnmount","arguments","length","undefined","on","_onAccept","_onComplete","destroy","cloneProps","assign","prop","forEach","nonMaskProp","_extractNonMaskProps","maskProp","get","typedValue","unmaskedValue","set","render","createElement","Component","nestedComponentName","displayName","name","concat","propTypes","default"],"mappings":"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","sourcesContent":["import { a as _inherits, b as _createSuper, c as _createClass, d as _classCallCheck, e as _assertThisInitialized } from './_rollupPluginBabelHelpers-9b6cc24f.js';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IMask from 'imask/esm/imask';\n\nvar MASK_PROPS = {\n  // common\n  mask: PropTypes.oneOfType([PropTypes.array, PropTypes.func, PropTypes.string, PropTypes.instanceOf(RegExp), PropTypes.oneOf([Date, Number, IMask.Masked]), PropTypes.instanceOf(IMask.Masked)]),\n  value: PropTypes.any,\n  unmask: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['typed'])]),\n  prepare: PropTypes.func,\n  validate: PropTypes.func,\n  commit: PropTypes.func,\n  overwrite: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['shift'])]),\n  eager: PropTypes.bool,\n  // events\n  onAccept: PropTypes.func,\n  onComplete: PropTypes.func,\n  // pattern\n  placeholderChar: PropTypes.string,\n  lazy: PropTypes.bool,\n  definitions: PropTypes.object,\n  blocks: PropTypes.object,\n  // date\n  pattern: PropTypes.string,\n  format: PropTypes.func,\n  parse: PropTypes.func,\n  autofix: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['pad'])]),\n  // number\n  radix: PropTypes.string,\n  thousandsSeparator: PropTypes.string,\n  mapToRadix: PropTypes.arrayOf(PropTypes.string),\n  scale: PropTypes.number,\n  signed: PropTypes.bool,\n  normalizeZeros: PropTypes.bool,\n  padFractionalZeros: PropTypes.bool,\n  min: PropTypes.oneOfType([PropTypes.number, PropTypes.instanceOf(Date)]),\n  max: PropTypes.oneOfType([PropTypes.number, PropTypes.instanceOf(Date)]),\n  // dynamic\n  dispatch: PropTypes.func,\n  // ref\n  inputRef: PropTypes.func\n};\nvar MASK_PROPS_NAMES = Object.keys(MASK_PROPS);\nvar NON_MASK_OPTIONS_PROPS_NAMES = ['value', 'unmask', 'onAccept', 'onComplete', 'inputRef'];\nvar MASK_OPTIONS_PROPS_NAMES = MASK_PROPS_NAMES.filter(function (pName) {\n  return NON_MASK_OPTIONS_PROPS_NAMES.indexOf(pName) < 0;\n});\nfunction IMaskMixin(ComposedComponent) {\n  var MaskedComponent = /*#__PURE__*/function (_React$Component) {\n    _inherits(MaskedComponent, _React$Component);\n\n    var _super = _createSuper(MaskedComponent);\n\n    function MaskedComponent(props) {\n      var _this;\n\n      _classCallCheck(this, MaskedComponent);\n\n      _this = _super.call(this, props);\n      _this._inputRef = _this._inputRef.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(MaskedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (!this.props.mask) return;\n        this.initMask();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var props = this.props;\n\n        var maskOptions = this._extractMaskOptionsFromProps(props);\n\n        if (maskOptions.mask) {\n          if (this.maskRef) {\n            this.maskRef.updateOptions(maskOptions); // TODO\n\n            if ('value' in props && (props.value !== this.maskValue || // handle cases like Number('') === 0,\n            // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n            typeof props.value !== 'string' && this.maskRef.value === '' && !this.maskRef.el.isActive)) {\n              this.maskValue = props.value;\n            }\n          } else {\n            this.initMask(maskOptions); // TODO\n          }\n        } else {\n          this.destroyMask();\n          if ('value' in props) this.element.value = props.value;\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.destroyMask();\n      }\n    }, {\n      key: \"_inputRef\",\n      value: function _inputRef(el) {\n        this.element = el;\n        if (this.props.inputRef) this.props.inputRef(el);\n      }\n    }, {\n      key: \"initMask\",\n      value: function initMask() {\n        var maskOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._extractMaskOptionsFromProps(this.props);\n        this.maskRef = IMask(this.element, maskOptions).on('accept', this._onAccept.bind(this)).on('complete', this._onComplete.bind(this));\n        if ('value' in this.props) this.maskValue = this.props.value;\n      }\n    }, {\n      key: \"destroyMask\",\n      value: function destroyMask() {\n        if (this.maskRef) {\n          this.maskRef.destroy();\n          delete this.maskRef;\n        }\n      }\n    }, {\n      key: \"_extractMaskOptionsFromProps\",\n      value: function _extractMaskOptionsFromProps(props) {\n        var cloneProps = Object.assign({}, props); // keep only mask options props\n\n        Object.keys(cloneProps) // TODO why need cast to string?\n        .filter(function (prop) {\n          return MASK_OPTIONS_PROPS_NAMES.indexOf(prop) < 0;\n        }).forEach(function (nonMaskProp) {\n          delete cloneProps[nonMaskProp];\n        });\n        return cloneProps;\n      }\n    }, {\n      key: \"_extractNonMaskProps\",\n      value: function _extractNonMaskProps(props) {\n        var cloneProps = Object.assign({}, props);\n        MASK_PROPS_NAMES.forEach(function (maskProp) {\n          delete cloneProps[maskProp];\n        });\n        return cloneProps;\n      }\n    }, {\n      key: \"maskValue\",\n      get: function get() {\n        if (this.props.unmask === 'typed') return this.maskRef.typedValue;\n        if (this.props.unmask) return this.maskRef.unmaskedValue;\n        return this.maskRef.value;\n      },\n      set: function set(value) {\n        value = value == null ? '' : value;\n        if (this.props.unmask === 'typed') this.maskRef.typedValue = value;else if (this.props.unmask) this.maskRef.unmaskedValue = value;else this.maskRef.value = value;\n      }\n    }, {\n      key: \"_onAccept\",\n      value: function _onAccept(e) {\n        if (this.props.onAccept && this.maskRef) this.props.onAccept(this.maskValue, this.maskRef, e);\n      }\n    }, {\n      key: \"_onComplete\",\n      value: function _onComplete(e) {\n        if (this.props.onComplete && this.maskRef) this.props.onComplete(this.maskValue, this.maskRef, e);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(ComposedComponent, Object.assign({}, this._extractNonMaskProps(this.props), {\n          inputRef: this._inputRef\n        }));\n      }\n    }]);\n\n    return MaskedComponent;\n  }(React.Component);\n\n  var nestedComponentName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n  MaskedComponent.displayName = \"IMask(\".concat(nestedComponentName, \")\");\n  MaskedComponent.propTypes = MASK_PROPS;\n  return MaskedComponent;\n}\n\nexport { IMaskMixin as default };\n"]},"metadata":{},"sourceType":"module"}