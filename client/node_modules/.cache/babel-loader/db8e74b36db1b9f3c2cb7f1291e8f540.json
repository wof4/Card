{"ast":null,"code":"import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass, f as _slicedToArray, g as _get, h as _getPrototypeOf, i as _set } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/input-definition.js';\nimport './factory.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './regexp.js';\n/** Date mask */\n\nvar MaskedDate = /*#__PURE__*/function (_MaskedPattern) {\n  _inherits(MaskedDate, _MaskedPattern);\n\n  var _super = _createSuper(MaskedDate);\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** */\n\n  /**\n    @param {Object} opts\n  */\n\n\n  function MaskedDate(opts) {\n    _classCallCheck(this, MaskedDate);\n\n    return _super.call(this, Object.assign({}, MaskedDate.DEFAULTS, opts));\n  }\n  /**\n    @override\n  */\n\n\n  _createClass(MaskedDate, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      if (opts.mask === Date) delete opts.mask;\n      if (opts.pattern) opts.mask = opts.pattern;\n      var blocks = opts.blocks;\n      opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS()); // adjust year block\n\n      if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n      if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n\n      if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to) {\n        opts.blocks.m.from = opts.min.getMonth() + 1;\n        opts.blocks.m.to = opts.max.getMonth() + 1;\n\n        if (opts.blocks.m.from === opts.blocks.m.to) {\n          opts.blocks.d.from = opts.min.getDate();\n          opts.blocks.d.to = opts.max.getDate();\n        }\n      }\n\n      Object.assign(opts.blocks, this.blocks, blocks); // add autofix\n\n      Object.keys(opts.blocks).forEach(function (bk) {\n        var b = opts.blocks[bk];\n        if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n      });\n\n      _get(_getPrototypeOf(MaskedDate.prototype), \"_update\", this).call(this, opts);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2;\n\n      var date = this.date;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(MaskedDate.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n    }\n    /** Checks if date is exists */\n\n  }, {\n    key: \"isDateExist\",\n    value: function isDateExist(str) {\n      return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n    }\n    /** Parsed Date */\n\n  }, {\n    key: \"date\",\n    get: function get() {\n      return this.typedValue;\n    },\n    set: function set(date) {\n      this.typedValue = date;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.isComplete ? _get(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", this) : null;\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", value, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      return mask === Date || _get(_getPrototypeOf(MaskedDate.prototype), \"maskEquals\", this).call(this, mask);\n    }\n  }]);\n\n  return MaskedDate;\n}(MaskedPattern);\n\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: function format(date) {\n    if (!date) return '';\n    var day = String(date.getDate()).padStart(2, '0');\n    var month = String(date.getMonth() + 1).padStart(2, '0');\n    var year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: function parse(str) {\n    var _str$split = str.split('.'),\n        _str$split2 = _slicedToArray(_str$split, 3),\n        day = _str$split2[0],\n        month = _str$split2[1],\n        year = _str$split2[2];\n\n    return new Date(year, month - 1, day);\n  }\n};\n\nMaskedDate.GET_DEFAULT_BLOCKS = function () {\n  return {\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999\n    }\n  };\n};\n\nIMask.MaskedDate = MaskedDate;\nexport { MaskedDate as default };","map":{"version":3,"sources":["C:/Users/yulya/Desktop/Новая папка/card/client/node_modules/imask/esm/masked/date.js"],"names":["d","_inherits","e","_createSuper","a","_classCallCheck","_","_createClass","f","_slicedToArray","g","_get","h","_getPrototypeOf","i","_set","MaskedPattern","MaskedRange","IMask","MaskedDate","_MaskedPattern","_super","opts","call","Object","assign","DEFAULTS","key","value","_update","mask","Date","pattern","blocks","GET_DEFAULT_BLOCKS","min","Y","from","getFullYear","max","to","m","getMonth","getDate","keys","forEach","bk","b","autofix","prototype","doValidate","_get2","date","_len","arguments","length","args","Array","_key","apply","concat","isComplete","isDateExist","str","format","parse","indexOf","get","typedValue","set","maskEquals","day","String","padStart","month","year","join","_str$split","split","_str$split2","maxLength","default"],"mappings":"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","sourcesContent":["import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass, f as _slicedToArray, g as _get, h as _getPrototypeOf, i as _set } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/input-definition.js';\nimport './factory.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './regexp.js';\n\n/** Date mask */\n\nvar MaskedDate = /*#__PURE__*/function (_MaskedPattern) {\n  _inherits(MaskedDate, _MaskedPattern);\n\n  var _super = _createSuper(MaskedDate);\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** */\n\n  /**\n    @param {Object} opts\n  */\n  function MaskedDate(opts) {\n    _classCallCheck(this, MaskedDate);\n\n    return _super.call(this, Object.assign({}, MaskedDate.DEFAULTS, opts));\n  }\n  /**\n    @override\n  */\n\n\n  _createClass(MaskedDate, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      if (opts.mask === Date) delete opts.mask;\n      if (opts.pattern) opts.mask = opts.pattern;\n      var blocks = opts.blocks;\n      opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS()); // adjust year block\n\n      if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n      if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n\n      if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to) {\n        opts.blocks.m.from = opts.min.getMonth() + 1;\n        opts.blocks.m.to = opts.max.getMonth() + 1;\n\n        if (opts.blocks.m.from === opts.blocks.m.to) {\n          opts.blocks.d.from = opts.min.getDate();\n          opts.blocks.d.to = opts.max.getDate();\n        }\n      }\n\n      Object.assign(opts.blocks, this.blocks, blocks); // add autofix\n\n      Object.keys(opts.blocks).forEach(function (bk) {\n        var b = opts.blocks[bk];\n        if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n      });\n\n      _get(_getPrototypeOf(MaskedDate.prototype), \"_update\", this).call(this, opts);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2;\n\n      var date = this.date;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(MaskedDate.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n    }\n    /** Checks if date is exists */\n\n  }, {\n    key: \"isDateExist\",\n    value: function isDateExist(str) {\n      return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n    }\n    /** Parsed Date */\n\n  }, {\n    key: \"date\",\n    get: function get() {\n      return this.typedValue;\n    },\n    set: function set(date) {\n      this.typedValue = date;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.isComplete ? _get(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", this) : null;\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", value, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      return mask === Date || _get(_getPrototypeOf(MaskedDate.prototype), \"maskEquals\", this).call(this, mask);\n    }\n  }]);\n\n  return MaskedDate;\n}(MaskedPattern);\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: function format(date) {\n    if (!date) return '';\n    var day = String(date.getDate()).padStart(2, '0');\n    var month = String(date.getMonth() + 1).padStart(2, '0');\n    var year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: function parse(str) {\n    var _str$split = str.split('.'),\n        _str$split2 = _slicedToArray(_str$split, 3),\n        day = _str$split2[0],\n        month = _str$split2[1],\n        year = _str$split2[2];\n\n    return new Date(year, month - 1, day);\n  }\n};\n\nMaskedDate.GET_DEFAULT_BLOCKS = function () {\n  return {\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999\n    }\n  };\n};\n\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n"]},"metadata":{},"sourceType":"module"}