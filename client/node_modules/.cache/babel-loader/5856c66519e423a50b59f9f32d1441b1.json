{"ast":null,"code":"import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n/** Bridge between HTMLElement and {@link Masked} */\n\nvar HTMLMaskElement = /*#__PURE__*/function (_MaskElement) {\n  _inherits(HTMLMaskElement, _MaskElement);\n\n  var _super = _createSuper(HTMLMaskElement);\n  /** Mapping between HTMLElement events and mask internal events */\n\n  /** HTMLElement to use mask on */\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n\n\n  function HTMLMaskElement(input) {\n    var _this;\n\n    _classCallCheck(this, HTMLMaskElement);\n\n    _this = _super.call(this);\n    _this.input = input;\n    _this._handlers = {};\n    return _this;\n  }\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n\n\n  _createClass(HTMLMaskElement, [{\n    key: \"rootElement\",\n    get: function get() {\n      var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n\n      return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;\n    }\n    /**\n      Is element in focus\n      @readonly\n    */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      //$FlowFixMe\n      return this.input === this.rootElement.activeElement;\n    }\n    /**\n      Returns HTMLElement selection start\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelectionStart\",\n    get: function get() {\n      return this.input.selectionStart;\n    }\n    /**\n      Returns HTMLElement selection end\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelectionEnd\",\n    get: function get() {\n      return this.input.selectionEnd;\n    }\n    /**\n      Sets HTMLElement selection\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {\n      this.input.setSelectionRange(start, end);\n    }\n    /**\n      HTMLElement value\n      @override\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.input.value;\n    },\n    set: function set(value) {\n      this.input.value = value;\n    }\n    /**\n      Binds HTMLElement events to mask internal events\n      @override\n    */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {\n      var _this2 = this;\n\n      Object.keys(handlers).forEach(function (event) {\n        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\n      });\n    }\n    /**\n      Unbinds HTMLElement events to mask internal events\n      @override\n    */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this3 = this;\n\n      Object.keys(this._handlers).forEach(function (event) {\n        return _this3._toggleEventHandler(event);\n      });\n    }\n    /** */\n\n  }, {\n    key: \"_toggleEventHandler\",\n    value: function _toggleEventHandler(event, handler) {\n      if (this._handlers[event]) {\n        this.input.removeEventListener(event, this._handlers[event]);\n        delete this._handlers[event];\n      }\n\n      if (handler) {\n        this.input.addEventListener(event, handler);\n        this._handlers[event] = handler;\n      }\n    }\n  }]);\n\n  return HTMLMaskElement;\n}(MaskElement);\n\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur'\n};\nIMask.HTMLMaskElement = HTMLMaskElement;\nexport { HTMLMaskElement as default };","map":{"version":3,"sources":["C:/Users/yulya/Desktop/Новая папка/card/client/node_modules/imask/esm/controls/html-mask-element.js"],"names":["d","_inherits","e","_createSuper","a","_classCallCheck","_","_createClass","MaskElement","IMask","HTMLMaskElement","_MaskElement","_super","input","_this","call","_handlers","key","get","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","rootElement","activeElement","selectionStart","selectionEnd","value","_unsafeSelect","start","end","setSelectionRange","set","bindEvents","handlers","_this2","Object","keys","forEach","event","_toggleEventHandler","EVENTS_MAP","unbindEvents","_this3","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","commit","default"],"mappings":"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","sourcesContent":["import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n/** Bridge between HTMLElement and {@link Masked} */\n\nvar HTMLMaskElement = /*#__PURE__*/function (_MaskElement) {\n  _inherits(HTMLMaskElement, _MaskElement);\n\n  var _super = _createSuper(HTMLMaskElement);\n\n  /** Mapping between HTMLElement events and mask internal events */\n\n  /** HTMLElement to use mask on */\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  function HTMLMaskElement(input) {\n    var _this;\n\n    _classCallCheck(this, HTMLMaskElement);\n\n    _this = _super.call(this);\n    _this.input = input;\n    _this._handlers = {};\n    return _this;\n  }\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n\n\n  _createClass(HTMLMaskElement, [{\n    key: \"rootElement\",\n    get: function get() {\n      var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n\n      return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;\n    }\n    /**\n      Is element in focus\n      @readonly\n    */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      //$FlowFixMe\n      return this.input === this.rootElement.activeElement;\n    }\n    /**\n      Returns HTMLElement selection start\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelectionStart\",\n    get: function get() {\n      return this.input.selectionStart;\n    }\n    /**\n      Returns HTMLElement selection end\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelectionEnd\",\n    get: function get() {\n      return this.input.selectionEnd;\n    }\n    /**\n      Sets HTMLElement selection\n      @override\n    */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {\n      this.input.setSelectionRange(start, end);\n    }\n    /**\n      HTMLElement value\n      @override\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.input.value;\n    },\n    set: function set(value) {\n      this.input.value = value;\n    }\n    /**\n      Binds HTMLElement events to mask internal events\n      @override\n    */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {\n      var _this2 = this;\n\n      Object.keys(handlers).forEach(function (event) {\n        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\n      });\n    }\n    /**\n      Unbinds HTMLElement events to mask internal events\n      @override\n    */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this3 = this;\n\n      Object.keys(this._handlers).forEach(function (event) {\n        return _this3._toggleEventHandler(event);\n      });\n    }\n    /** */\n\n  }, {\n    key: \"_toggleEventHandler\",\n    value: function _toggleEventHandler(event, handler) {\n      if (this._handlers[event]) {\n        this.input.removeEventListener(event, this._handlers[event]);\n        delete this._handlers[event];\n      }\n\n      if (handler) {\n        this.input.addEventListener(event, handler);\n        this._handlers[event] = handler;\n      }\n    }\n  }]);\n\n  return HTMLMaskElement;\n}(MaskElement);\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur'\n};\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n"]},"metadata":{},"sourceType":"module"}