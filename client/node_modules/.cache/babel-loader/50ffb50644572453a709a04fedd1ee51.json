{"ast":null,"code":"import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass, g as _get, h as _getPrototypeOf, i as _set, b as _objectWithoutProperties } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\nimport '../core/continuous-tail-details.js';\nvar _excluded = [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"];\n/** Dynamic mask for choosing apropriate mask in run-time */\n\nvar MaskedDynamic = /*#__PURE__*/function (_Masked) {\n  _inherits(MaskedDynamic, _Masked);\n\n  var _super = _createSuper(MaskedDynamic);\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  /**\n    @param {Object} opts\n  */\n\n\n  function MaskedDynamic(opts) {\n    var _this;\n\n    _classCallCheck(this, MaskedDynamic);\n\n    _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));\n    _this.currentMask = null;\n    return _this;\n  }\n  /**\n    @override\n  */\n\n\n  _createClass(MaskedDynamic, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\n\n      if ('mask' in opts) {\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\n          return createMask(m);\n        }) : [];\n      }\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"_appendCharRaw\",\n    value: function _appendCharRaw(ch) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var details = this._applyDispatch(ch, flags);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendChar(ch, flags));\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_applyDispatch\",\n    value: function _applyDispatch() {\n      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n      var inputValue = this.rawInputValue;\n      var insertValue = flags.tail && flags._beforeTailState != null ? // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue : inputValue;\n      var tailValue = inputValue.slice(insertValue.length);\n      var prevMask = this.currentMask;\n      var details = new ChangeDetails();\n      var prevMaskState = prevMask && prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\n\n      this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\n\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset();\n\n          if (insertValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            var d = this.currentMask.append(insertValue, {\n              raw: true\n            });\n            details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n          }\n\n          if (tailValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true\n            }).tailShift;\n          }\n        } else {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_appendPlaceholder\",\n    value: function _appendPlaceholder() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n\n      return details;\n    }\n    /**\n     @override\n    */\n\n  }, {\n    key: \"_appendEager\",\n    value: function _appendEager() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendEager());\n      }\n\n      return details;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doDispatch\",\n    value: function doDispatch(appended) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.dispatch(appended, this, flags);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2, _this$currentMask;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.currentMask || (_this$currentMask = this.currentMask).doValidate.apply(_this$currentMask, args));\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this$currentMask2;\n\n      (_this$currentMask2 = this.currentMask) === null || _this$currentMask2 === void 0 ? void 0 : _this$currentMask2.reset();\n      this.compiledMasks.forEach(function (m) {\n        return m.reset();\n      });\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.value : '';\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.unmaskedValue : '';\n    },\n    set: function set(unmaskedValue) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.typedValue : '';\n    } // probably typedValue should not be used with dynamic\n    ,\n    set: function set(value) {\n      var unmaskedValue = String(value); // double check it\n\n      if (this.currentMask) {\n        this.currentMask.typedValue = value;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n\n      this.unmaskedValue = unmaskedValue;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      var _this$currentMask3;\n\n      return Boolean((_this$currentMask3 = this.currentMask) === null || _this$currentMask3 === void 0 ? void 0 : _this$currentMask3.isComplete);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      var _this$currentMask4;\n\n      return Boolean((_this$currentMask4 = this.currentMask) === null || _this$currentMask4 === void 0 ? void 0 : _this$currentMask4.isFilled);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var details = new ChangeDetails();\n\n      if (this.currentMask) {\n        var _this$currentMask5;\n\n        details.aggregate((_this$currentMask5 = this.currentMask).remove.apply(_this$currentMask5, arguments)) // update with dispatch\n        .aggregate(this._applyDispatch());\n      }\n\n      return details;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map(function (m) {\n          return m.state;\n        }),\n        currentMaskRef: this.currentMask,\n        currentMask: this.currentMask && this.currentMask.state\n      });\n    },\n    set: function set(state) {\n      var compiledMasks = state.compiledMasks,\n          currentMaskRef = state.currentMaskRef,\n          currentMask = state.currentMask,\n          maskedState = _objectWithoutProperties(state, _excluded);\n\n      this.compiledMasks.forEach(function (m, mi) {\n        return m.state = compiledMasks[mi];\n      });\n\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"extractInput\",\n    value: function extractInput() {\n      var _this$currentMask6;\n\n      return this.currentMask ? (_this$currentMask6 = this.currentMask).extractInput.apply(_this$currentMask6, arguments) : '';\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"extractTail\",\n    value: function extractTail() {\n      var _this$currentMask7, _get3;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.currentMask ? (_this$currentMask7 = this.currentMask).extractTail.apply(_this$currentMask7, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get3, [this].concat(args));\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doCommit\",\n    value: function doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"nearestInputPos\",\n    value: function nearestInputPos() {\n      var _this$currentMask8, _get4;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.currentMask ? (_this$currentMask8 = this.currentMask).nearestInputPos.apply(_this$currentMask8, args) : (_get4 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get4, [this].concat(args));\n    }\n  }, {\n    key: \"overwrite\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\n    },\n    set: function set(overwrite) {\n      console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }, {\n    key: \"eager\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.eager : _get(_getPrototypeOf(MaskedDynamic.prototype), \"eager\", this);\n    },\n    set: function set(eager) {\n      console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      return Array.isArray(mask) && this.compiledMasks.every(function (m, mi) {\n        var _mask$mi;\n\n        return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);\n      });\n    }\n  }]);\n\n  return MaskedDynamic;\n}(Masked);\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: function dispatch(appended, masked, flags) {\n    if (!masked.compiledMasks.length) return;\n    var inputValue = masked.rawInputValue; // simulate input\n\n    var inputs = masked.compiledMasks.map(function (m, index) {\n      m.reset();\n      m.append(inputValue, {\n        raw: true\n      });\n      m.append(appended, flags);\n      var weight = m.rawInputValue.length;\n      return {\n        weight: weight,\n        index: index\n      };\n    }); // pop masks with longer values first\n\n    inputs.sort(function (i1, i2) {\n      return i2.weight - i1.weight;\n    });\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\nexport { MaskedDynamic as default };","map":{"version":3,"sources":["C:/Users/yulya/Desktop/Новая папка/card/client/node_modules/imask/esm/masked/dynamic.js"],"names":["d","_inherits","e","_createSuper","a","_classCallCheck","_","_createClass","g","_get","h","_getPrototypeOf","i","_set","b","_objectWithoutProperties","ChangeDetails","createMask","Masked","IMask","_excluded","MaskedDynamic","_Masked","_super","opts","_this","call","Object","assign","DEFAULTS","currentMask","key","value","_update","prototype","compiledMasks","Array","isArray","mask","map","m","_appendCharRaw","ch","flags","arguments","length","undefined","details","_applyDispatch","aggregate","_appendChar","appended","prevValueBeforeTail","tail","_beforeTailState","_value","inputValue","rawInputValue","insertValue","_rawInputValue","tailValue","slice","prevMask","prevMaskState","state","doDispatch","reset","append","raw","tailShift","inserted","_appendPlaceholder","apply","_appendEager","dispatch","doValidate","_get2","_this$currentMask","_len","args","_key","concat","_this$currentMask2","forEach","get","set","unmaskedValue","typedValue","String","_this$currentMask3","Boolean","isComplete","_this$currentMask4","isFilled","remove","_this$currentMask5","currentMaskRef","maskedState","mi","extractInput","_this$currentMask6","extractTail","_this$currentMask7","_get3","_len2","_key2","doCommit","nearestInputPos","_this$currentMask8","_get4","_len3","_key3","overwrite","console","warn","eager","maskEquals","every","_mask$mi","masked","inputs","index","weight","sort","i1","i2","default"],"mappings":"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","sourcesContent":["import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass, g as _get, h as _getPrototypeOf, i as _set, b as _objectWithoutProperties } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\nimport '../core/continuous-tail-details.js';\n\nvar _excluded = [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"];\n\n/** Dynamic mask for choosing apropriate mask in run-time */\nvar MaskedDynamic = /*#__PURE__*/function (_Masked) {\n  _inherits(MaskedDynamic, _Masked);\n\n  var _super = _createSuper(MaskedDynamic);\n\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  /**\n    @param {Object} opts\n  */\n  function MaskedDynamic(opts) {\n    var _this;\n\n    _classCallCheck(this, MaskedDynamic);\n\n    _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));\n    _this.currentMask = null;\n    return _this;\n  }\n  /**\n    @override\n  */\n\n\n  _createClass(MaskedDynamic, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\n\n      if ('mask' in opts) {\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\n          return createMask(m);\n        }) : [];\n      }\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"_appendCharRaw\",\n    value: function _appendCharRaw(ch) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var details = this._applyDispatch(ch, flags);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendChar(ch, flags));\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_applyDispatch\",\n    value: function _applyDispatch() {\n      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n      var inputValue = this.rawInputValue;\n      var insertValue = flags.tail && flags._beforeTailState != null ? // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue : inputValue;\n      var tailValue = inputValue.slice(insertValue.length);\n      var prevMask = this.currentMask;\n      var details = new ChangeDetails();\n      var prevMaskState = prevMask && prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\n\n      this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\n\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset();\n\n          if (insertValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            var d = this.currentMask.append(insertValue, {\n              raw: true\n            });\n            details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n          }\n\n          if (tailValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true\n            }).tailShift;\n          }\n        } else {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_appendPlaceholder\",\n    value: function _appendPlaceholder() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n\n      return details;\n    }\n    /**\n     @override\n    */\n\n  }, {\n    key: \"_appendEager\",\n    value: function _appendEager() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendEager());\n      }\n\n      return details;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doDispatch\",\n    value: function doDispatch(appended) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.dispatch(appended, this, flags);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2, _this$currentMask;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.currentMask || (_this$currentMask = this.currentMask).doValidate.apply(_this$currentMask, args));\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this$currentMask2;\n\n      (_this$currentMask2 = this.currentMask) === null || _this$currentMask2 === void 0 ? void 0 : _this$currentMask2.reset();\n      this.compiledMasks.forEach(function (m) {\n        return m.reset();\n      });\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.value : '';\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.unmaskedValue : '';\n    },\n    set: function set(unmaskedValue) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.typedValue : '';\n    } // probably typedValue should not be used with dynamic\n    ,\n    set: function set(value) {\n      var unmaskedValue = String(value); // double check it\n\n      if (this.currentMask) {\n        this.currentMask.typedValue = value;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n\n      this.unmaskedValue = unmaskedValue;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      var _this$currentMask3;\n\n      return Boolean((_this$currentMask3 = this.currentMask) === null || _this$currentMask3 === void 0 ? void 0 : _this$currentMask3.isComplete);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      var _this$currentMask4;\n\n      return Boolean((_this$currentMask4 = this.currentMask) === null || _this$currentMask4 === void 0 ? void 0 : _this$currentMask4.isFilled);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var details = new ChangeDetails();\n\n      if (this.currentMask) {\n        var _this$currentMask5;\n\n        details.aggregate((_this$currentMask5 = this.currentMask).remove.apply(_this$currentMask5, arguments)) // update with dispatch\n        .aggregate(this._applyDispatch());\n      }\n\n      return details;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map(function (m) {\n          return m.state;\n        }),\n        currentMaskRef: this.currentMask,\n        currentMask: this.currentMask && this.currentMask.state\n      });\n    },\n    set: function set(state) {\n      var compiledMasks = state.compiledMasks,\n          currentMaskRef = state.currentMaskRef,\n          currentMask = state.currentMask,\n          maskedState = _objectWithoutProperties(state, _excluded);\n\n      this.compiledMasks.forEach(function (m, mi) {\n        return m.state = compiledMasks[mi];\n      });\n\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"extractInput\",\n    value: function extractInput() {\n      var _this$currentMask6;\n\n      return this.currentMask ? (_this$currentMask6 = this.currentMask).extractInput.apply(_this$currentMask6, arguments) : '';\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"extractTail\",\n    value: function extractTail() {\n      var _this$currentMask7, _get3;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.currentMask ? (_this$currentMask7 = this.currentMask).extractTail.apply(_this$currentMask7, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get3, [this].concat(args));\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doCommit\",\n    value: function doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"nearestInputPos\",\n    value: function nearestInputPos() {\n      var _this$currentMask8, _get4;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.currentMask ? (_this$currentMask8 = this.currentMask).nearestInputPos.apply(_this$currentMask8, args) : (_get4 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get4, [this].concat(args));\n    }\n  }, {\n    key: \"overwrite\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\n    },\n    set: function set(overwrite) {\n      console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }, {\n    key: \"eager\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.eager : _get(_getPrototypeOf(MaskedDynamic.prototype), \"eager\", this);\n    },\n    set: function set(eager) {\n      console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      return Array.isArray(mask) && this.compiledMasks.every(function (m, mi) {\n        var _mask$mi;\n\n        return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);\n      });\n    }\n  }]);\n\n  return MaskedDynamic;\n}(Masked);\nMaskedDynamic.DEFAULTS = {\n  dispatch: function dispatch(appended, masked, flags) {\n    if (!masked.compiledMasks.length) return;\n    var inputValue = masked.rawInputValue; // simulate input\n\n    var inputs = masked.compiledMasks.map(function (m, index) {\n      m.reset();\n      m.append(inputValue, {\n        raw: true\n      });\n      m.append(appended, flags);\n      var weight = m.rawInputValue.length;\n      return {\n        weight: weight,\n        index: index\n      };\n    }); // pop masks with longer values first\n\n    inputs.sort(function (i1, i2) {\n      return i2.weight - i1.weight;\n    });\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n"]},"metadata":{},"sourceType":"module"}