{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yulya\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\card\\\\client\\\\src\\\\utils.tsx\";\nimport React from \"react\";\nimport { IMaskInput } from \"react-imask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardNumberMaskCustom = (props, ref) => {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"0000 0000 0000 0000\" // @ts-ignore\n    ,\n    inputRef: ref,\n    definitions: {\n      \"#\": /[0-9]/\n    },\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_c = CardNumberMaskCustom;\nexport const DateMaskCustom = /*#__PURE__*/React.forwardRef(_c2 = (props, ref) => {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"00/00\" // @ts-ignore\n    ,\n    inputRef: ref,\n    definitions: {\n      \"#\": /[0-9]/\n    },\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n});\n_c3 = DateMaskCustom;\nexport const AmountMaskCustom = /*#__PURE__*/React.forwardRef(_c4 = (props, ref) => {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"0000000000000000000\" // @ts-ignore\n    ,\n    inputRef: ref,\n    definitions: {\n      \"#\": /[0-9]/\n    },\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n});\n_c5 = AmountMaskCustom;\nexport const checkValidData = (name, value) => {\n  if (name === \"expDate\") {\n    const yearNow = new Date().getFullYear();\n    const month = Number(value.substring(0, 2)) <= 12;\n    const year = Number(value.substring(3, 5)) + 2000 < yearNow + 5;\n    return month === true && year === true;\n  }\n\n  return true;\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CardNumberMaskCustom\");\n$RefreshReg$(_c2, \"DateMaskCustom$React.forwardRef\");\n$RefreshReg$(_c3, \"DateMaskCustom\");\n$RefreshReg$(_c4, \"AmountMaskCustom$React.forwardRef\");\n$RefreshReg$(_c5, \"AmountMaskCustom\");","map":{"version":3,"sources":["C:/Users/yulya/Desktop/Новая папка/card/client/src/utils.tsx"],"names":["React","IMaskInput","CardNumberMaskCustom","props","ref","onChange","other","value","target","name","DateMaskCustom","forwardRef","AmountMaskCustom","checkValidData","yearNow","Date","getFullYear","month","Number","substring","year"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAIA,OAAO,MAAMC,oBAAoB,GAC/B,CAACC,KAAD,EAA2DC,GAA3D,KAAgH;AAC9G,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACE,QAAC,UAAD,OACMG,KADN;AAEE,IAAA,IAAI,EAAC,qBAFP,CAGE;AAHF;AAIE,IAAA,QAAQ,EAAEF,GAJZ;AAKE,IAAA,WAAW,EAAE;AACX,WAAK;AADM,KALf;AAQE,IAAA,QAAQ,EAAGG,KAAD,IACRF,QAAQ,CAAC;AAAEG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAAd;AAAoBF,QAAAA;AAApB;AAAV,KAAD,CATZ;AAWE,IAAA,SAAS;AAXX;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlBI;KAAML,oB;AAqBb,OAAO,MAAMQ,cAAc,gBAAGV,KAAK,CAACW,UAAN,OAC5B,CAACR,KAAD,EAAQC,GAAR,KAAgB;AACd,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACE,QAAC,UAAD,OACMG,KADN;AAEE,IAAA,IAAI,EAAC,OAFP,CAGE;AAHF;AAIE,IAAA,QAAQ,EAAEF,GAJZ;AAKE,IAAA,WAAW,EAAE;AACX,WAAK;AADM,KALf;AAQE,IAAA,QAAQ,EAAGG,KAAD,IACRF,QAAQ,CAAC;AAAEG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAAd;AAAoBF,QAAAA;AAApB;AAAV,KAAD,CATZ;AAWE,IAAA,SAAS;AAXX;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlB2B,CAAvB;MAAMG,c;AAoBb,OAAO,MAAME,gBAAgB,gBAAGZ,KAAK,CAACW,UAAN,OAC9B,CAACR,KAAD,EAAQC,GAAR,KAAgB;AACd,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACE,QAAC,UAAD,OACMG,KADN;AAEE,IAAA,IAAI,EAAC,qBAFP,CAGE;AAHF;AAIE,IAAA,QAAQ,EAAEF,GAJZ;AAKE,IAAA,WAAW,EAAE;AACX,WAAK;AADM,KALf;AAQE,IAAA,QAAQ,EAAGG,KAAD,IACRF,QAAQ,CAAC;AAAEG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAAd;AAAoBF,QAAAA;AAApB;AAAV,KAAD,CATZ;AAWE,IAAA,SAAS;AAXX;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlB6B,CAAzB;MAAMK,gB;AAqBb,OAAO,MAAMC,cAAc,GAAG,CAACJ,IAAD,EAAeF,KAAf,KAAiC;AAC7D,MAAIE,IAAI,KAAK,SAAb,EAAwB;AACtB,UAAMK,OAAO,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAhB;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACX,KAAK,CAACY,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAAN,IAAiC,EAA/C;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACX,KAAK,CAACY,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAAN,GAAgC,IAAhC,GAAuCL,OAAO,GAAG,CAA9D;AAEA,WAAOG,KAAK,KAAK,IAAV,IAAkBG,IAAI,KAAK,IAAlC;AACD;;AACD,SAAO,IAAP;AACD,CATM","sourcesContent":["import React from \"react\";\nimport { IMaskInput } from \"react-imask\";\nimport { ReactElement } from \"react-imask/dist/mixin\";\nimport { CustomProps } from \"./types\";\n\nexport const CardNumberMaskCustom = (\n  (props: { [x: string]: any; name?: any; onChange?: any; }, ref: React.RefCallback<ReactElement> | undefined) => {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"0000 0000 0000 0000\"\n        // @ts-ignore\n        inputRef={ref}\n        definitions={{\n          \"#\": /[0-9]/,\n        }}\n        onAccept={(value: any) =>\n          onChange({ target: { name: props.name, value } })\n        }\n        overwrite\n      />\n    );\n  }\n);\n\nexport const DateMaskCustom = React.forwardRef<HTMLElement, CustomProps>(\n  (props, ref) => {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"00/00\"\n        // @ts-ignore\n        inputRef={ref}\n        definitions={{\n          \"#\": /[0-9]/,\n        }}\n        onAccept={(value: any) =>\n          onChange({ target: { name: props.name, value } })\n        }\n        overwrite\n      />\n    );\n  }\n);\nexport const AmountMaskCustom = React.forwardRef<HTMLElement, CustomProps>(\n  (props, ref) => {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"0000000000000000000\"\n        // @ts-ignore\n        inputRef={ref}\n        definitions={{\n          \"#\": /[0-9]/,\n        }}\n        onAccept={(value: any) =>\n          onChange({ target: { name: props.name, value } })\n        }\n        overwrite\n      />\n    );\n  }\n);\n\nexport const checkValidData = (name: string, value: string) => {\n  if (name === \"expDate\") {\n    const yearNow = new Date().getFullYear();\n    const month = Number(value.substring(0, 2)) <= 12;\n    const year = Number(value.substring(3, 5)) + 2000 < yearNow + 5;\n\n    return month === true && year === true;\n  }\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}