{"ast":null,"code":"import { _ as _createClass, a as _classCallCheck } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport IMask from '../core/holder.js';\n/**\n  Generic element API to use with mask\n  @interface\n*/\n\nvar MaskElement = /*#__PURE__*/function () {\n  function MaskElement() {\n    _classCallCheck(this, MaskElement);\n  }\n\n  _createClass(MaskElement, [{\n    key: \"selectionStart\",\n    get:\n    /** */\n\n    /** */\n\n    /** */\n\n    /** Safely returns selection start */\n    function get() {\n      var start;\n\n      try {\n        start = this._unsafeSelectionStart;\n      } catch (e) {}\n\n      return start != null ? start : this.value.length;\n    }\n    /** Safely returns selection end */\n\n  }, {\n    key: \"selectionEnd\",\n    get: function get() {\n      var end;\n\n      try {\n        end = this._unsafeSelectionEnd;\n      } catch (e) {}\n\n      return end != null ? end : this.value.length;\n    }\n    /** Safely sets element selection */\n\n  }, {\n    key: \"select\",\n    value: function select(start, end) {\n      if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n\n      try {\n        this._unsafeSelect(start, end);\n      } catch (e) {}\n    }\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {}\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return false;\n    }\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {}\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {}\n  }]);\n\n  return MaskElement;\n}();\n\nIMask.MaskElement = MaskElement;\nexport { MaskElement as default };","map":{"version":3,"sources":["C:/Users/yulya/Desktop/Новая папка/card/client/node_modules/imask/esm/controls/mask-element.js"],"names":["_","_createClass","a","_classCallCheck","IMask","MaskElement","key","get","start","_unsafeSelectionStart","e","value","length","end","_unsafeSelectionEnd","select","selectionStart","selectionEnd","_unsafeSelect","bindEvents","handlers","unbindEvents","default"],"mappings":"AAAA,SAASA,CAAC,IAAIC,YAAd,EAA4BC,CAAC,IAAIC,eAAjC,QAAwD,0CAAxD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAG,aAAa,YAAY;AACzC,WAASA,WAAT,GAAuB;AACrBF,IAAAA,eAAe,CAAC,IAAD,EAAOE,WAAP,CAAf;AACD;;AAEDJ,EAAAA,YAAY,CAACI,WAAD,EAAc,CAAC;AACzBC,IAAAA,GAAG,EAAE,gBADoB;AAEzBC,IAAAA,GAAG;AACH;;AAEA;;AAEA;;AAEA;AACA,aAASA,GAAT,GAAe;AACb,UAAIC,KAAJ;;AAEA,UAAI;AACFA,QAAAA,KAAK,GAAG,KAAKC,qBAAb;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;;AAEd,aAAOF,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKG,KAAL,CAAWC,MAA1C;AACD;AACD;;AAnByB,GAAD,EAqBvB;AACDN,IAAAA,GAAG,EAAE,cADJ;AAEDC,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,UAAIM,GAAJ;;AAEA,UAAI;AACFA,QAAAA,GAAG,GAAG,KAAKC,mBAAX;AACD,OAFD,CAEE,OAAOJ,CAAP,EAAU,CAAE;;AAEd,aAAOG,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,KAAKF,KAAL,CAAWC,MAAtC;AACD;AACD;;AAXC,GArBuB,EAkCvB;AACDN,IAAAA,GAAG,EAAE,QADJ;AAEDK,IAAAA,KAAK,EAAE,SAASI,MAAT,CAAgBP,KAAhB,EAAuBK,GAAvB,EAA4B;AACjC,UAAIL,KAAK,IAAI,IAAT,IAAiBK,GAAG,IAAI,IAAxB,IAAgCL,KAAK,KAAK,KAAKQ,cAAf,IAAiCH,GAAG,KAAK,KAAKI,YAAlF,EAAgG;;AAEhG,UAAI;AACF,aAAKC,aAAL,CAAmBV,KAAnB,EAA0BK,GAA1B;AACD,OAFD,CAEE,OAAOH,CAAP,EAAU,CAAE;AACf;AACD;;AATC,GAlCuB,EA6CvB;AACDJ,IAAAA,GAAG,EAAE,eADJ;AAEDK,IAAAA,KAAK,EAAE,SAASO,aAAT,CAAuBV,KAAvB,EAA8BK,GAA9B,EAAmC,CAAE;AAC5C;;AAHC,GA7CuB,EAkDvB;AACDP,IAAAA,GAAG,EAAE,UADJ;AAEDC,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAP;AACD;AACD;;AALC,GAlDuB,EAyDvB;AACDD,IAAAA,GAAG,EAAE,YADJ;AAEDK,IAAAA,KAAK,EAAE,SAASQ,UAAT,CAAoBC,QAApB,EAA8B,CAAE;AACvC;;AAHC,GAzDuB,EA8DvB;AACDd,IAAAA,GAAG,EAAE,cADJ;AAEDK,IAAAA,KAAK,EAAE,SAASU,YAAT,GAAwB,CAAE;AAFhC,GA9DuB,CAAd,CAAZ;;AAmEA,SAAOhB,WAAP;AACD,CAzE8B,EAA/B;;AA0EAD,KAAK,CAACC,WAAN,GAAoBA,WAApB;AAEA,SAASA,WAAW,IAAIiB,OAAxB","sourcesContent":["import { _ as _createClass, a as _classCallCheck } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport IMask from '../core/holder.js';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nvar MaskElement = /*#__PURE__*/function () {\n  function MaskElement() {\n    _classCallCheck(this, MaskElement);\n  }\n\n  _createClass(MaskElement, [{\n    key: \"selectionStart\",\n    get:\n    /** */\n\n    /** */\n\n    /** */\n\n    /** Safely returns selection start */\n    function get() {\n      var start;\n\n      try {\n        start = this._unsafeSelectionStart;\n      } catch (e) {}\n\n      return start != null ? start : this.value.length;\n    }\n    /** Safely returns selection end */\n\n  }, {\n    key: \"selectionEnd\",\n    get: function get() {\n      var end;\n\n      try {\n        end = this._unsafeSelectionEnd;\n      } catch (e) {}\n\n      return end != null ? end : this.value.length;\n    }\n    /** Safely sets element selection */\n\n  }, {\n    key: \"select\",\n    value: function select(start, end) {\n      if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n\n      try {\n        this._unsafeSelect(start, end);\n      } catch (e) {}\n    }\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {}\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return false;\n    }\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {}\n    /** Should be overriden in subclasses */\n\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {}\n  }]);\n\n  return MaskElement;\n}();\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n"]},"metadata":{},"sourceType":"module"}